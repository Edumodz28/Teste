local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local Range = 10  -- Distância máxima para atacar

-- Função para obter partes visíveis no campo de visão do jogador
local function getPartsInViewport(maxDistance)
    local partsInViewport = {}
    for _, part in ipairs(workspace:GetDescendants()) do
        if part:IsA("BasePart") then
            local distance = LocalPlayer:DistanceFromCharacter(part.Position)
            if distance <= maxDistance then
                local _, isVisible = Camera:WorldToViewportPoint(part.Position)
                if isVisible then
                    table.insert(partsInViewport, part)
                end
            end
        end
    end
    return partsInViewport
end

-- Loop principal para detectar e atacar personagens próximos
while true do
    wait()  -- Aguarda um intervalo de tempo antes de verificar novamente
    
    local Tool = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Tool")
    local Parts = getPartsInViewport(Range)
    
    -- Verifica se o jogador tem uma ferramenta equipada
    if Tool and Tool:FindFirstChild("Handle") then
        -- Loop através das partes visíveis no campo de visão
        for _, Part in ipairs(Parts) do
            -- Verifica se a parte pertence a um personagem e se o personagem está vivo
            if Part and Part.Parent and Part.Parent ~= LocalPlayer.Character and Part.Parent:FindFirstChild("Humanoid") and Part.Parent.Humanoid.Health > 0 then
                -- Ativa a ferramenta e ataca a parte
                Tool:Activate()
                game:GetService("ReplicatedStorage").MeleeEvent:FireServer(Part)
            end
        end
    end
end
