-- Definir AutoFarm como true
_G.AutoFarm = true

-- Função para verificar o nível do jogador e iniciar uma missão adequada
function MonLevel()
    local lv = game:GetService("Players").LocalPlayer.PlayerStats.Level.Value
    
    if lv >= 1 and lv < 14 then
        _G.Quest = "Soldier"
        _G.Ms = "Soldier [Lv:1]"
    elseif lv >= 15 and lv <= 30000 then
        _G.Quest = "Soldier [Lv:1]"
        _G.Ms = "Soldier [Lv:1]"
    end
end

-- Função para enviar mensagem indicando que está encontrando os monstros
local function SendMessage(message)
    local tag = "[AutoFarm]"
    local formattedMessage = string.format("[%s] %s", tag, message)
    game:GetService("StarterGui"):SetCore("ChatMakeSystemMessage", {
        Text = formattedMessage,
        Color = Color3.new(1, 1, 0), -- Cor amarela
    })
end

-- Função para automatizar o processo de farm
function AutoFarm()
    MonLevel()
    
    if not game:GetService("Players").LocalPlayer.PlayerGui.QuestGui.Enabled then
        game:GetService("ReplicatedStorage").FuncQuest:InvokeServer(_G.Quest)
    else
        for _, v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
            if v.Name == _G.Ms and v.Humanoid.Health > 0 then
                repeat
                    wait()
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 2)
                    game:GetService('VirtualUser'):CaptureController()
                    game:GetService('VirtualUser'):ClickButton1(Vector2.new(0, 0), game:GetService("Workspace").Camera.CFrame)
                    SendMessage("Encontrando monstros...") -- Enviar mensagem indicando que está encontrando os monstros
                until not _G.AutoFarm or v.Humanoid.Health <= 0
            end
        end
    end
end

-- Loop Auto Farm
while _G.AutoFarm do
    wait()
    pcall(function()
        AutoFarm()
        print("POWER X EDIT")
    end)
end
