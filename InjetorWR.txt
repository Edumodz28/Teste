local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local MaxDistance = 50  -- Distância máxima para procurar NPCs
local AttackRange = 10  -- Distância máxima para atacar NPCs

-- Função para obter partes visíveis no campo de visão do jogador
local function getPartsInViewport(maxDistance)
    local partsInViewport = {}
    local ignoreList = {LocalPlayer.Character, Camera}
    for _, part in ipairs(workspace:FindPartsInRegion3WithIgnoreList(Region3.new(Camera.CFrame.Position - Vector3.new(maxDistance, maxDistance, maxDistance), Camera.CFrame.Position + Vector3.new(maxDistance, maxDistance, maxDistance)), ignoreList, math.huge)) do
        if part:IsA("BasePart") and part.Parent and part.Parent:FindFirstChildOfClass("Humanoid") then
            table.insert(partsInViewport, part)
        end
    end
    return partsInViewport
end

-- Função para encontrar um ponto vazio acima do NPC
local function findEmptySpaceAboveNPC(npc)
    local ray = Ray.new(npc.Position, Vector3.new(0, 100, 0))  -- Lança um raio para cima
    local hitPart, hitPosition = workspace:FindPartOnRayWithIgnoreList(ray, {npc})
    if hitPart then
        return hitPosition + Vector3.new(0, 2, 0)  -- Adiciona uma pequena altura para garantir que o jogador não fique dentro do NPC
    end
end

-- Função para teleportar o jogador para cima do NPC
local function teleportToNPC(npc)
    local emptySpacePosition = findEmptySpaceAboveNPC(npc)
    if emptySpacePosition then
        local humanoidRootPart = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            humanoidRootPart.CFrame = CFrame.new(emptySpacePosition)
        end
    end
end

-- Função para criar o quadrado que aparece quando o jogador clica em "h"
local function createDamageSquare()
    local damageSquare = Instance.new("Part")
    damageSquare.Size = Vector3.new(5, 1, 5)  -- Tamanho do quadrado
    damageSquare.Anchored = true
    damageSquare.Position = LocalPlayer.Character and LocalPlayer.Character.HumanoidRootPart.Position or Vector3.new(0, 0, 0)  -- Posição inicial do quadrado
    damageSquare.BrickColor = BrickColor.new("Bright red")
    damageSquare.Transparency = 0.5  -- Transparência
    damageSquare.Parent = workspace
    return damageSquare
end

-- Evento para criar o quadrado quando o jogador clica em "h"
local function onKeyPress(input)
    if input.KeyCode == Enum.KeyCode.H then
        createDamageSquare()
    end
end

-- Conectar o evento de pressionar tecla ao teclado do jogador
game:GetService("UserInputService").InputBegan:Connect(onKeyPress)

-- Loop principal para detectar e atacar NPCs próximos
while true do
    wait()  -- Aguarda um intervalo de tempo antes de verificar novamente
    
    local Tool = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Tool")
    
    -- Verifica se o jogador tem uma ferramenta equipada
    if Tool and Tool:FindFirstChild("Handle") then
        -- Obtem todas as partes visíveis no campo de visão dentro do limite de distância
        local Parts = getPartsInViewport(MaxDistance)
        
        -- Loop através das partes visíveis no campo de visão
        for _, Part in ipairs(Parts) do
            -- Verifica se o NPC está dentro do alcance de ataque
            local distanceToNPC = LocalPlayer:DistanceFromCharacter(Part.Position)
            if distanceToNPC <= AttackRange then
                -- Teleporta o jogador para cima do NPC
                teleportToNPC(Part)
                
                -- Ativa a ferramenta e ataca a parte
                Tool:Activate()
                game:GetService("ReplicatedStorage").MeleeEvent:FireServer(Part)
                
                -- Aguarda até que a vida do NPC seja menor ou igual a 0 (ou seja, o NPC morreu)
                while Part.Parent:FindFirstChildOfClass("Humanoid") and Part.Parent.Humanoid.Health > 0 do
                    wait()
                end
                
                -- Procura pelo próximo NPC
                break
            end
        end
    end
end
